import pyotp
import qrcode

class TwoFactorAuth:
    def __init__(self, user_email):
        self.user_email = user_email
        self.secret = self.generate_secret()

    @staticmethod
    def generate_secret():
        return pyotp.random_base32()

    def generate_qr_code(self):
        totp = pyotp.TOTP(self.secret)
        provisioning_uri = totp.provisioning_uri(name=self.user_email, issuer_name="Ãœberewachungssystem")
        img = qrcode.make(provisioning_uri)
        img.show()

    def verify_otp(self, user_otp):
        totp = pyotp.TOTP(self.secret)
        return totp.verify(user_otp)

if __name__ == "__main__":
    # Example use case: new user registration
    user_email = "user@example.com"
    two_fa = TwoFactorAuth(user_email)
    print(f"User's secret key: {two_fa.secret}")

    # Generate and display a QR code for the user to scan in Google Authenticator
    # two_fa.generate_qr_code()

    # Simulate user entering an OTP generated by their Google Authenticator app
    user_input_otp = input("Enter the OTP from Google Authenticator: ")

    # Verify the OTP
    if two_fa.verify_otp(user_input_otp):
        print("OTP is valid!")
    else:
        print("Invalid OTP.")